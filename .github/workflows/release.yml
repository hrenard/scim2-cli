---
name: bundle
on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: build dist files
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'poetry'
      - name: build dist
        run: poetry build
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: dist/*
          if-no-files-found: error

  bundle:
    name: build binary files
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - 'windows-latest'
        - 'ubuntu-latest'
        - 'macos-latest'

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - run: pip install poetry
    - run: poetry install
    - run: poetry run pyinstaller --name scim2-${{ matrix.os }} --onefile scim2_cli/__init__.py
    - run: ./dist/scim2-${{ matrix.os }}
    - uses: actions/upload-artifact@v4
      if: ${{ matrix.os != 'windows-latest' }}
      with:
        name: scim2-${{ github.ref_name }}-${{ matrix.os }}
        path: ./dist/scim2-${{ matrix.os }}
        if-no-files-found: error
    - uses: actions/upload-artifact@v4
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        name: scim2-${{ github.ref_name }}-${{ matrix.os }}
        path: ./dist/scim2-${{ matrix.os }}.exe
        if-no-files-found: error

  release:
    name: create Github release
    needs: bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: scim2-${{ github.ref_name }}-*
      - name: Display structure of downloaded files
        run: ls -R
      - uses: softprops/action-gh-release@v2
        with:
          files:
            scim2-${{ github.ref_name }}-*/*

  publish:
    name: release to pypi
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: pypi-release
      url: https://pypi.org/project/scim2-cli/
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: dist

      - name: Push build artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
